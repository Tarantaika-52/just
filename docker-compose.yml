networks:
  dev:

volumes:
  app-data:

  db-data:
    driver: local

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - app-data:/just_data
    depends_on:
      - frontend
      - backend
    networks:
      - dev

  backend:
    build:
      context: ./backend
    networks:
      - dev
    volumes:
      - app-data:/just_data

  frontend:
    build: 
      context: ./frontend
    networks:
      - dev
    volumes:
      - app-data:/just_data

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin1
      POSTGRES_PASSWORD: admin1
      POSTGRES_DB: just_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5430:5432"
    volumes:
      - db-data:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    command: >
      postgres -c max_connections=1000
                     -c shared_buffers=256MB
                     -c effective_cache_size=768MB
                     -c maintenance_work_mem=64MB
                     -c checkpoint_completion_target=0.7
                     -c wal_buffers=16MB
                     -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
      interval: 30s
      timeout: 15s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
